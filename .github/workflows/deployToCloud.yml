name: Deploy to cloud.

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  workflow_dispatch:

jobs:
  deploy:
    name: Deploy stack.
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.1
          cli_config_credentials_token: ${{ secrets.TFE_TOKEN }}

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
        working-directory: ./terraform

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Validate
        id: validate
        run: terraform validate
        working-directory: ./terraform

      - name: Terraform Plan
        id: plan
        run: terraform plan
        working-directory: ./terraform
        env:
          TF_VAR_hcloud_token: ${{ secrets.HCLOUD_TOKEN }}

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve
        working-directory: ./terraform
        env:
          TF_VAR_hcloud_token: ${{ secrets.HCLOUD_TOKEN }}

      - name: install ansible dependencies
        run: ansible-galaxy install -r requirements.yml
        working-directory: ./ansible

      - name: Install Python dependencies
        run: |
          python -m venv playbook-venv
          source playbook-venv/bin/activate
          pip install -r requirements.txt
        working-directory: ./ansible

      - name: install ansible dependencies
        run: |
          source playbook-venv/bin/activate
          ansible-galaxy install -r requirements.yml
        working-directory: ./ansible

      - name: Run Ansible Playbook
        run: |
          source playbook-venv/bin/activate
          ansible-inventory --graph
          ansible-playbook playbook.yml --private-key ../terraform/machines.pem
        working-directory: ./ansible
        env:
          ANSIBLE_HOST_KEY_CHECKING: False
          HCLOUD_TOKEN: ${{ secrets.HCLOUD_TOKEN }}
